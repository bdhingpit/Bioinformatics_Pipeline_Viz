<?xml version='1.0'?>
<data>
	<!--QIIME2- Tools-->
	<tool name='qiime_tools_import'>
		<desc>Imports files into qiime-compatible format</desc>
		<ext-input>
			<input-type>FASTQ</input-type>
			<input-desc>FASTQ format Illumina paired-end library(ies).</input-desc>
		</ext-input>
		<output>
			<output-type>qza</output-type>
			<output-desc>qiime-imported file. Type depends on the file imported.</output-desc>
		</output>
	</tool>
	<tool name='qiime_cutadapt_trim-paired'>
		<desc>Removes adapters in demultiplexed paired-end reads</desc>
		<output>
			<output-type>qza-SampleData[PairedEndSequencesWithQuality]</output-type>
			<output-desc>The resulting trimmed sequences.</output-desc>
		</output>
	</tool>
	<tool name='qiime_vsearch_merge-pairs'>
		<desc>Merge paired-end reads</desc>
		<output>
			<output-type>qza-SampleData[JoinedSequencesWithQuality]</output-type>
			<output-desc>The merged sequences.</output-desc>
		</output>
	</tool>
	<tool name='qiime_quality-filter_q-score'>
		<desc>Filter sequences based on sequence quality</desc>
		<output>
			<output-type>qza-SampleData[JoinedSequencesWithQuality]</output-type>
			<output-desc>The resulting quality-filtered sequences.</output-desc>
		</output>
		<output>
			<output-type>qza-QualityFilterStats</output-type>
			<output-desc>Summary statistics of the filtering process.</output-desc>
		</output>
	</tool>
	<tool name='qiime_vsearch_dereplicate-sequences'>
		<desc>Dereplicate sequence data</desc>
		<output>
			<output-type>qza-FeatureTable[Frequency]</output-type>
			<output-desc>The table of dereplicated sequences.</output-desc>
		</output>
		<output>
			<output-type>qza-FeatureData[Sequence]</output-type>
			<output-desc>The dereplicated sequences.</output-desc>
		</output>
	</tool>
	<tool name='qiime_vsearch_cluster-features-open-reference'>
		<desc>Cluster feature sequences, first, against a reference database. Unclustered sequences will then clustered following a de novo approach.</desc>
		<ext-input>
			<input-type>qza-FeatureData[Sequence]</input-type>
			<input-desc>The sequences to use as cluster centroids.</input-desc>
		</ext-input>
		<output>
			<output-type>qza-FeatureTable[Frequency]</output-type>
			<output-desc>The table following clustering of features.</output-desc>
		</output>
		<output>
			<output-type>qza-FeatureData[Sequence]-1</output-type>
			<output-desc>Sequences representing clustered features.</output-desc>
		</output>
		<output>
			<output-type>qza-FeatureData[Sequence]-2</output-type>
			<output-desc>New reference sequences that can be used for subsequent clustering.</output-desc>
		</output>
	</tool>
	<tool name='qiime_feature-table_filter-features'>
		<desc>Filter features from a table based on frequency and/or metadata.</desc>
		<output>
			<output-type>qza-FeatureTable[Frequency]</output-type>
			<output-desc>The resulting feature table filtered by feature.</output-desc>
		</output>
	</tool>
	<tool name='qiime_feature-table_filter-seqs'>
		<desc>Filter features from sequences based on a feature table or metadata.</desc>
		<output>
			<output-type>qza-FeatureData[Sequence|AlignedSequence]</output-type>
			<output-desc>The resulting filtered sequences.</output-desc>
		</output>
	</tool>
	<tool name='qiime_vsearch_uchime-denovo'>
		<desc>Identify chimeric feature sequences.</desc>
		<output>
			<output-type>qza-FeatureData[Sequence]-1</output-type>
			<output-desc>The chimeric sequences.</output-desc>
		</output>
		<output>
			<output-type>qza-FeatureData[Sequence]-2</output-type>
			<output-desc>The non-chimeric sequences.</output-desc>
		</output>
		<output>
			<output-type>qza-UchimeStats</output-type>
			<output-desc>Summary statistics from chimera checking.</output-desc>
		</output>
	</tool>
	<tool name='qiime_feature-classifier_classify-sklearn'>
		<desc>Classify reads by taxon using a fitted classifier.</desc>
		<ext-input>
			<input-type>qza-TaxonomicClassifier</input-type>
			<input-desc>The taxonomic classifier for classifying the reads.</input-desc>
		</ext-input>
		<output>
			<output-type>qza-FeatureData[Taxonomy]</output-type>
			<output-desc>Feature-predicted taxonomies.</output-desc>
		</output>
	</tool>
	<tool name='qiime_taxa_barplot'>
		<desc>Produce an interactive taxa barplot.</desc>
		<output>
			<output-type>qzv</output-type>
			<output-desc>Taxa barplot.</output-desc>
		</output>
	</tool>
	<tool name='qiime_taxa_barplot'>
		<desc>Produce an interactive taxa barplot.</desc>
		<output>
			<output-type>qzv</output-type>
			<output-desc>Taxa barplot.</output-desc>
		</output>
	</tool>
	<tool name='qiime_dada2_denoise-paired'>
		<desc>This method denoises paired-end sequences, dereplicates them, and filters chimeras.</desc>
		<output>
			<output-type>qza-FeatureTable[Frequency]</output-type>
			<output-desc>The resulting feature table.</output-desc>
		</output>
		<output>
			<output-type>qza-FeatureData[Sequence]</output-type>
			<output-desc>
				The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence, 
				and these sequences will be the joined paired-end sequences.
			</output-desc>
		</output>
		<output>
			<output-type>qza-SampleData[DADA2Stats]</output-type>
			<output-desc>DADA2 summary stats.</output-desc>
		</output>
	</tool>
	<tool name='qiime_dada2_denoise-ccs'>
		<desc>This method denoises single-end Pacbio CCS sequences, dereplicates them, filters chimeras.</desc>
		<output>
			<output-type>qza-FeatureTable[Frequency]</output-type>
			<output-desc>The resulting feature table.</output-desc>
		</output>
		<output>
			<output-type>qza-FeatureData[Sequence]</output-type>
			<output-desc>The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence.</output-desc>
		</output>
		<output>
			<output-type>qza-SampleData[DADA2Stats]</output-type>
			<output-desc>DADA2 summary stats.</output-desc>
		</output>
	</tool>
	<tool name='qiime_demux_summarize'>
		<desc>Summarize counts per sample for all samples, and generate interactive positional quality plots based on `n` randomly selected sequences.</desc>
		<output>
			<output-type>qzv</output-type>
			<output-desc>Per-sample sequence counts and positional quality plots.</output-desc>
		</output>
	</tool>
	<!--PICRUSt2 Tools-->
	<tool name='PICRUSt2_place_seqs'>
		<desc>Script to run EPA-ng and GAPPA to place study sequences (i.e. OTUs or ASVs) into a reference tree.</desc>
		<ext-input>
			<input-type>FASTA</input-type>
			<input-desc>Unaligned query sequences.</input-desc>
		</ext-input>
		<output>
			<output-type>Tree file</output-type>
			<output-desc>Output tree of phylogenetically placed query sequences.</output-desc>
		</output>
	</tool>
	<tool name='PICRUSt2_hsp_seqs'>
		<desc>Predict the copy number of gene families present in the predicted genome for each amplicon sequence variant.</desc>
		<output>
			<output-type>Table</output-type>
			<output-desc>Output table with predicted abundances per study sequence in input tree.</output-desc>
		</output>
	</tool>
	<tool name='PICRUSt2_metagenome_pipeline'>
		<desc>
			Per-sample metagenome functional profiles are generated based on the predicted functions for each study sequence. Note that typically these sequences correspond to OTUs or ASVs. The specified sequence abundance table will be normalized by the predicted number of marker gene copies before outputting the final files by default. The sample metagenome table stratified by contributing ASVs can optionally also be output.</desc>
		<output>
			<output-type>seqtab_norm.tsv</output-type>
			<output-desc>Representative sequences' feature table that is normalized by the predicted number of 16S genes.</output-desc>
		</output>
		<output>
			<output-type>weighted_nsti.tsv</output-type>
			<output-desc>Table containing weighted NSTI values for each sample.</output-desc>
		</output>
		<output>
			<output-type>pred_metagenome_unstrat.tsv</output-type>
			<output-desc>Abundance of each gene family per sample.</output-desc>
		</output>
		<output>
			<output-type>pred_metagenome_contrib.tsv</output-type>
			<output-desc>Shows contribution of each ASV/OTU per sample per function.</output-desc>
		</output>
	</tool>
	<tool name='PICRUSt2_pathway_pipeline'>
		<desc>Infer the presence and abundances of pathways based on gene family abundances in a sample. By default, this script expects a table of EC number abundances (as output by PICRUSt2). However, alternative reaction to pathways mapping files can also be specified. By default, EC numbers are first regrouped to MetaCyc reactions, which are then linked to MetaCyc pathways through the default database.</desc>
		<output>
			<output-type>path_abun_contrib.tsv</output-type>
			<output-desc>Shows contribution of each ASV/OTU per gene family per pathway.</output-desc>
		</output>
		<output>
			<output-type>path_abun_unstrat.tsv</output-type>
			<output-desc>Abundance of each pathway per sample.</output-desc>
		</output>
	</tool>
	<tool name='PICRUSt2_add_descriptions'>
		<desc>adds a description column to a function abundance table and outputs a new file. The user needs to specify the input file and what type of functions are in the input table.</desc>
		<output>
			<output-type>Table</output-type>
			<output-desc>Abundance table with a new column containing description of gene family or pathway.</output-desc>
		</output>
	</tool>
	<!--General Tools-->
	<tool name='FastQC'>
		<ext-input>
			<input-type>FASTQ</input-type>
			<input-desc>FASTQ format Illumina single or paired-end library(ies).</input-desc>
		</ext-input>
		<desc>Perform quality control checks of sequence data.</desc>
		<output>
			<output-type>HTML</output-type>
			<output-desc>HTML page displaying different quality control metrics.</output-desc>
		</output>
	</tool>
	<tool name='Trimmomatic'>
		<ext-input>
			<input-type>FASTQ</input-type>
			<input-desc>FASTQ format Illumina single or paired-end library(ies).</input-desc>
		</ext-input>
		<desc>Trimming and filtering tool for Illumina single or paired-end reads.</desc>
		<output>
			<output-type>FASTQ</output-type>
			<output-desc>Trimmed and/or filtered sequencing reads.</output-desc>
		</output>
	</tool>
	<!--Shotgun Metagenomics Tools-->
	<tool name='MEGAHIT'>
		<desc>Ultra-fast and memory-efficient NGS assembleroptimized for metagenomes.</desc>
		<output>
			<output-type>FASTA</output-type>
			<output-desc>Assembled contigs.</output-desc>
		</output>
	</tool>
	<tool name='EukRep'>
		<desc>Classification of Eukaryotic and Prokaryotic sequences from metagenomic datasets.</desc>
		<output>
			<output-type>FASTA</output-type>
			<output-desc>Predicted eukaryotic (and optionally, prokayotic) contigs.</output-desc>
		</output>
	</tool>
	<tool name='BBMap'>
		<desc>Mapping of sequencing reads to assembly.</desc>
		<output>
			<output-type>BAM/SAM</output-type>
			<output-desc>Mapping file.</output-desc>
		</output>
	</tool>
	<tool name='jgi_summarize_bam_contig_depths'>
		<desc>Calculates the coverage of each contig in the assembly.</desc>
		<output>
			<output-type>Table</output-type>
			<output-desc>Tabular file containing contig coverage across samples.</output-desc>
		</output>
	</tool>
	<tool name='MetaBAT2'>
		<desc>Reconstructs genomes (aka. Bins) from metagenomic assembly data.</desc>
		<output>
			<output-type>FASTA files</output-type>
			<output-desc>Contigs separated into different FASTA files of putative bins.</output-desc>
		</output>
	</tool>
	<tool name='EukCC'>
		<desc>Estimates completeness and contamination of a eukaryotic bin.</desc>
		<output>
			<output-type>Stats</output-type>
			<output-desc>Table displaying completeness and contamination estimates of bins.</output-desc>
		</output>
	</tool>
	<!--Genomics Tools-->
	<tool name='SPAdes'>
		<desc>Toolkit designed for assembly of sequencing data.</desc>
		<output>
			<output-type>FASTA</output-type>
			<output-desc>Assembled contigs.</output-desc>
		</output>
	</tool>
	<tool name='QUAST'>
		<desc>Utility to evaluate genome or metagenome (metaQUAST) assemblies.</desc>
		<output>
			<output-type>HTML</output-type>
			<output-desc>HTML report displaying various assembly metrics.</output-desc>
		</output>
	</tool>
	<tool name='Prokka'>
		<desc>Annotate bacterial, archaeal and viral genomes quickly and produce standards-compliant output files..</desc>
		<output>
			<output-type>GFF</output-type>
			<output-desc>This is the master annotation in GFF3 format, containing both sequences and annotations. It can be viewed directly in Artemis or IGV.</output-desc>
		</output>
		<output>
			<output-type>GBK</output-type>
			<output-desc>This is a standard Genbank file derived from the master .gff. If the input to prokka was a multi-FASTA, then this will be a multi-Genbank, with one record for each sequence.</output-desc>
		</output>
		<output>
			<output-type>FAA</output-type>
			<output-desc>Protein FASTA file of the translated CDS sequences.</output-desc>
		</output>
		<output>
			<output-type>FFN</output-type>
			<output-desc>Nucleotide FASTA file of all the prediction transcripts (CDS, rRNA, tRNA, tmRNA, misc_RNA).</output-desc>
		</output>
	</tool>
</data>